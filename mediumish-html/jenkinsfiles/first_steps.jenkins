#!groovy
properties([disableConcurrentBuilds()]) // blocked simultaneous execution builds

pipeline {
    agent {
        label 'master' // agent master
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10')) // keept last 10 builds and artifacts
        timestamps() // set a time frame
    }
    stages {
        stage("Working Github WebHook") {
            steps {
                sh 'echo $USER && pwd'
            }
        }
        stage("Create AWS machine") {
            steps {
                sh 'cd mediumish-html/terraformfiles && terraform destroy -auto-approve -input=false'
                sh 'cd mediumish-html/terraformfiles && terraform init && set'
                sh 'cd mediumish-html/terraformfiles && terraform plan -input=false'
                sh 'cd mediumish-html/terraformfiles && terraform apply -auto-approve -input=false'
                //sh 'cd mediumish-html/terraformfiles && terraform destroy -auto-approve -input=false'
            }
        }
        stage("Installation and configuration by ansible"){
            steps{
                sleep(30)
                sh 'chmod 600 /var/lib/jenkins/workspace/DevOpsPipe/mediumish-html/terraformfiles/WebServer.pem '
                sh 'ansible WebServers -m setup'
                sh 'ansible WebServers -m shell -a "sudo apt-get -y update" -b'
                sh 'ansible WebServers -m shell -a "sudo apt-get install -y apache2" -b'
                sh 'ansible WebServers -m file -a "path=/etc/apache2/sites-available/000-default.conf state=absent" -b'
                sh 'ansible WebServers -m copy -a "src=/var/lib/jenkins/workspace/DevOpsPipe/mediumish-html/apache2_files/000-default.conf dest=/etc/apache2/sites-available/" -b'
                sh 'ansible WebServers -m copy -a "src=/var/lib/jenkins/workspace/DevOpsPipe/mediumish-html dest=/var/www/html/" -b'
                sh 'ansible WebServers -m shell -a "sudo systemctl start apache2" -b'
            }
        }
    }
}
